#!/usr/bin/env python
# -*- coding: utf-8 -*-
__Author__ = 'zhangyalei'
__Time__ = '2020-05-25' '17:07'

#!/usr/bin/env python
# -*- coding: utf-8 -*-
__Author__ = 'zhangyalei'
__Time__ = '2020-05-11' '14:53'

import boto3
import requests
import time
import json

while True:
    time.sleep(60)
    info_list = []
    client = boto3.client('logs')
    response_iterator = client.get_log_events(
        logGroupName='RDSOSMetrics',
        logStreamName="db-SEZFS32XCXLRJ3UI4TBQ4AJYBU",
    )
    abc = response_iterator["events"]
    data_info = abc[-1]["message"]
    str_value = str(abc[-1]["timestamp"])[:10]

    timeArray = time.localtime(int(str_value))
    hengha = time.strftime("%Y-%m-%d %H:%M:%S", timeArray)

    json_info = json.loads(data_info)

    cpu_info = json_info["cpuUtilization"]
    load_info = json_info["loadAverageMinute"]
    ts = int(time.time())
    get_really_info = json.loads(data_info)
    endpoint = get_really_info["instanceID"]
    dict_info_idle = {
        "endpoint": endpoint,
        "metric": "rds_aws_cpu_idle",
        "timestamp": ts,
        "step": 60,
        "value": cpu_info["idle"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_user = {
        "endpoint": endpoint,
        "metric": "rds_aws_cpu_user",
        "timestamp": ts,
        "step": 60,
        "value": cpu_info["user"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_wait = {
        "endpoint": endpoint,
        "metric": "rds_aws_cpu_wait",
        "timestamp": ts,
        "step": 60,
        "value": cpu_info["wait"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_total = {
        "endpoint": endpoint,
        "metric": "rds_aws_cpu_total",
        "timestamp": ts,
        "step": 60,
        "value": cpu_info["total"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_system = {
        "endpoint": endpoint,
        "metric": "rds_aws_cpu_system",
        "timestamp": ts,
        "step": 60,
        "value": cpu_info["system"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_load_one = {
        "endpoint": endpoint,
        "metric": "rds_aws_loadAverage_load_one",
        "timestamp": ts,
        "step": 60,
        "value": load_info["one"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_load_five = {
        "endpoint": endpoint,
        "metric": "rds_aws_loadAverage_load_five",
        "timestamp": ts,
        "step": 60,
        "value": load_info["five"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_load_fifteen = {
        "endpoint": endpoint,
        "metric": "rds_aws_loadAverage_load_fifteen",
        "timestamp": ts,
        "step": 60,
        "value": load_info["fifteen"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    network_info = json_info["network"]
    dict_info_network_rx = {
        "endpoint": endpoint,
        "metric": "rds_aws_network_rx",
        "timestamp": ts,
        "step": 60,
        "value": network_info[0]["rx"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    dict_info_network_wx = {
        "endpoint": endpoint,
        "metric": "rds_aws_network_tx",
        "timestamp": ts,
        "step": 60,
        "value": network_info[0]["tx"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    swap_info = json_info["swap"]
    dict_info_swap_free = {
        "endpoint": endpoint,
        "metric": "rds_aws_swap_free",
        "timestamp": ts,
        "step": 60,
        "value": swap_info["free"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }
    json_info["memory"]["active"]
    dict_info_memory_active = {
        "endpoint": endpoint,
        "metric": "rds_aws_memory_active",
        "timestamp": ts,
        "step": 60,
        "value": json_info["memory"]["active"],
        "counterType": "GAUGE",
        "tags": "my-tag",
    }

    disk_io_info = json_info["diskIO"]
    print("disk_io_info:", disk_io_info)
    for info in disk_io_info:
        dict_info_diskio_rdsdev = {
            "endpoint": endpoint,
            "metric": "rds_aws_diskio_util",
            "timestamp": ts,
            "step": 60,
            "value": info["util"],
            "counterType": "GAUGE",
            "tags": "my-tag",
        }
        dict_info_diskio_writeKbPS = {
            "endpoint": endpoint,
            "metric": "rds_aws_diskio_writeKbPS",
            "timestamp": ts,
            "step": 60,
            "value": info["writeKbPS"],
            "counterType": "GAUGE",
            "tags": "my-tag",
        }
        dict_info_diskio_readKbPS = {
            "endpoint": endpoint,
            "metric": "rds_aws_diskio_readKbPS",
            "timestamp": ts,
            "step": 60,
            "value": info["readKbPS"],
            "counterType": "GAUGE",
            "tags": "my-tag",
        }
        dict_info_diskio_await = {
            "endpoint": endpoint,
            "metric": "rds_aws_diskio_await",
            "timestamp": ts,
            "step": 60,
            "value": info["await"],
            "counterType": "GAUGE",
            "tags": "my-tag",
        }
    info_list.append(dict_info_diskio_rdsdev)
    info_list.append(dict_info_diskio_writeKbPS)
    info_list.append(dict_info_diskio_readKbPS)
    info_list.append(dict_info_diskio_await)
    info_list.append(dict_info_idle)
    info_list.append(dict_info_user)
    info_list.append(dict_info_wait)
    info_list.append(dict_info_total)
    info_list.append(dict_info_load_one)
    info_list.append(dict_info_network_wx)
    info_list.append(dict_info_network_rx)
    info_list.append(dict_info_swap_free)
    info_list.append(dict_info_memory_active)
    requests.post("http://127.0.0.1:1988/v1/push", data=json.dumps(info_list))
